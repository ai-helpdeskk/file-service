# .github/workflows/ci.yml
name: CI - Build and Push

on:
  push:
    branches: [ main, develop ]
    paths:
      - '**'
      - '!README.md'
      - '!.github/**'
  pull_request:
    branches: [ main ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: samitsinghhh/file-service

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
        
    - name: Run tests
      run: |
        pytest --cov=. --cov-report=xml
        
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml

  build-and-push:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64

    - name: Update deployment manifest
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
      env:
        GITHUB_TOKEN: ${{ secrets.MANIFEST_REPO_TOKEN }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Clone the k8s-manifests repository
        git clone https://github.com/${{ github.repository_owner }}/k8s-manifests.git
        cd k8s-manifests
        
        # Configure git
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        
        # Update the deployment file
        DEPLOYMENT_FILE="k8s/deployments/file-service-deployment.yaml"
        
        # Replace image tag with new SHA
        sed -i "s|${{ env.IMAGE_NAME }}:.*|${{ env.IMAGE_NAME }}:${{ github.ref_name }}-${IMAGE_TAG}|g" $DEPLOYMENT_FILE
        
        # Commit and push changes
        git add .
        git commit -m "Update file-service image to ${{ github.ref_name }}-${IMAGE_TAG} [skip ci]" || exit 0
        git push origin main

    - name: Trigger deployment
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
      run: |
        ENV="production"
        if [ "${{ github.ref }}" = "refs/heads/develop" ]; then
          ENV="staging"
        fi
        
        curl -X POST \
          -H "Authorization: token ${{ secrets.MANIFEST_REPO_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository_owner }}/k8s-manifests/dispatches \
          -d "{\"event_type\":\"deploy-file-service\",\"client_payload\":{\"environment\":\"$ENV\",\"image_tag\":\"${{ github.ref_name }}-${{ github.sha }}\"}}"
